{
	"name": "pixelant/interest",
	"description": "REST and CLI API for adding, updating, and deleting records in TYPO3. Tracks relations so records can be inserted in any order. Uses remote ID mapping so you don't have to keep track of what UID a record has gotten after import. Data is inserted using backend APIs as if a real human did it, so you can can inspect the record history and undo actions.",
	"license": "GPL-2.0-or-later",
	"type": "typo3-cms-extension",
	"keywords": [
		"typo3",
		"TYPO3 CMS"
	],
	"authors": [
		{
			"name": "Pixelant",
			"email": "info@pixelant.net",
			"homepage": "https://www.pixelant.net",
			"role": "Developer"
		}
	],
	"require": {
		"php": "~7.4.0 || ~8.0.0 || ~8.1.0 || ~8.2.0",
		"ext-json": "*",
		"ext-pdo": "*",
		"symfony/polyfill-php81": "^1.28",
		"typo3/cms-core": "^11.5.8 || ^12.4.6",
		"typo3/cms-fluid": "^11.5.8 || ^12.4.6",
		"typo3/cms-frontend": "^11.5.8 || ^12.4.6"
	},
	"require-dev": {
		"doctrine/dbal": "^2.13.5 || ^3.6.2",
		"ergebnis/composer-normalize": "^2.28.3",
		"friendsofphp/php-cs-fixer": "^3.14.1",
		"helmich/typo3-typoscript-lint": "^3.1.0",
		"jangregor/phpstan-prophecy": "^1.0.0",
		"phpstan/extension-installer": "^1.3.1",
		"phpstan/phpstan": "^1.10.30",
		"phpstan/phpstan-phpunit": "^1.3.13",
		"phpstan/phpstan-strict-rules": "^1.5.1",
		"phpunit/phpunit": "^9.6.11",
		"saschaegerer/phpstan-typo3": "^1.8.9",
		"seld/jsonlint": "^1.10.0",
		"squizlabs/php_codesniffer": "^3.7.2",
		"symfony/yaml": "^5.3.6 || ^6.2.0",
		"typo3/coding-standards": "^0.6.1",
		"typo3/testing-framework": "^7.0.4"
	},
	"replace": {
		"typo3-ter/interest": "self.version"
	},
	"conflict": {
		"phpstan/phpstan": "1.7.12 || 1.7.13 || 1.7.14"
	},
	"suggest": {
		"typo3/cms-reactions": "To use TYPO3 reactions as entry point and for authentication."
	},
	"prefer-stable": true,
	"autoload": {
		"psr-4": {
			"Pixelant\\Interest\\": "Classes/"
		}
	},
	"autoload-dev": {
		"psr-4": {
			"Pixelant\\Interest\\Tests\\": "Tests/"
		}
	},
	"config": {
		"allow-plugins": {
			"ergebnis/composer-normalize": true,
			"phpstan/extension-installer": true,
			"typo3/class-alias-loader": true,
			"typo3/cms-composer-installers": true
		},
		"preferred-install": {
			"*": "dist"
		},
		"sort-packages": true,
		"vendor-dir": ".Build/vendor"
	},
	"extra": {
		"branch-alias": {
			"dev-master": "0.0.x-dev"
		},
		"typo3/cms": {
			"app-dir": ".Build",
			"extension-key": "interest",
			"web-dir": ".Build/public"
		}
	},
	"scripts": {
		"post-autoload-dump": [
			"@link-extension"
		],
		"ci": [
			"@ci:static"
		],
		"ci:composer:normalize": "@composer normalize --dry-run",
		"ci:coverage": [
			"@ci:coverage:unit",
			"@ci:coverage:functional"
		],
		"ci:coverage:functional": ".Build/vendor/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTests.xml --whitelist Classes --coverage-php=coverage/functional.cov Tests/Functional",
		"ci:coverage:merge": "@php tools/phpcov merge --clover=./coverage/clover.xml coverage/",
		"ci:coverage:unit": ".Build/vendor/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml --whitelist Classes --coverage-php=coverage/unit.cov Tests/Unit",
		"ci:dynamic": [
			"@ci:tests"
		],
		"ci:json:lint": "find . ! -path '*.Build/*' ! -path '*Resources/Private/node_modules/*' -name '*.json' | xargs -r php .Build/vendor/bin/jsonlint -q",
		"ci:php": [
			"@ci:php:copypaste",
			"@ci:php:cs-fixer",
			"@ci:php:lint",
			"@ci:php:sniff",
			"@ci:php:stan"
		],
		"ci:php:copypaste": "@php ./tools/phpcpd Classes",
		"ci:php:cs-fixer": "php-cs-fixer fix --config .php-cs-fixer.php -v --dry-run --using-cache no --diff",
		"ci:php:lint": "find *.php Classes Configuration Tests -name '*.php' -print0 | xargs -r -0 -n 1 -P 4 php -l",
		"ci:php:sniff": "phpcs Classes Configuration Tests",
		"ci:php:stan": "phpstan -v --no-progress",
		"ci:static": [
			"@ci:composer:normalize",
			"@ci:json:lint",
			"@ci:php:copypaste",
			"@ci:php:cs-fixer",
			"@ci:php:lint",
			"@ci:php:sniff",
			"@ci:php:stan",
			"@ci:ts:lint",
			"@ci:yaml:lint"
		],
		"ci:tests": [
			"@ci:tests:unit",
			"@ci:tests:functional"
		],
		"ci:tests:functional": "find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo \"Running functional test suite {}\"; .Build/vendor/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTests.xml {}';",
		"ci:tests:unit": ".Build/vendor/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml Tests/Unit",
		"ci:ts:lint": "typoscript-lint -c Configuration/TsLint.yml --ansi -n --fail-on-warnings -vvv Configuration/TypoScript",
		"ci:yaml:lint": "find . ! -path '*.Build/*' ! -path '*Resources/Private/node_modules/*' -name '*.yml' | xargs -r php ./.Build/vendor/bin/yaml-lint",
		"docs:generate": [
			"docker run --rm t3docs/render-documentation show-shell-commands > tempfile.sh; echo 'dockrun_t3rd makehtml' >> tempfile.sh; bash tempfile.sh; rm tempfile.sh"
		],
		"fix:php": [
			"@fix:php:cs",
			"@fix:php:sniff"
		],
		"fix:php:cs": "php-cs-fixer fix --config .php-cs-fixer.php",
		"fix:php:sniff": "phpcbf Classes Configuration Tests",
		"link-extension": [
			"@php -r 'is_dir($extFolder=__DIR__.\"/.Build/public/typo3conf/ext/\") || mkdir($extFolder, 0777, true);'",
			"@php -r 'file_exists($extFolder=__DIR__.\"/.Build/public/typo3conf/ext/interest\") || symlink(__DIR__,$extFolder);'"
		],
		"phpstan:baseline": ".Build/vendor/bin/phpstan  --generate-baseline=phpstan-baseline.neon",
		"prepare-release": [
			"rm .gitignore",
			"rm -rf .Build",
			"rm -rf .ddev",
			"rm -rf .github",
			"rm -rf .gitlab",
			"rm -rf Tests",
			"rm -rf tools",
			"rm .editorconfig",
			"rm .gitattributes",
			"rm .php-cs-fixer.php",
			"rm -rf Documentation-GENERATED-temp",
			"rm Resources/Private/.eslintignore",
			"rm Resources/Private/.eslintrc.json",
			"rm Resources/Private/.prettierrc.js",
			"rm Resources/Private/package.json",
			"rm Resources/Private/stylelint.config.js",
			"rm codeception.yml",
			"rm phive.xml",
			"rm phpstan-baseline.neon",
			"rm phpstan.neon",
			"rm phpcs.xml"
		]
	},
	"scripts-descriptions": {
		"ci": "Runs all dynamic and static code checks.",
		"ci:composer:normalize": "Checks the composer.json.",
		"ci:coverage:functional": "Generates the code coverage report for functional tests.",
		"ci:coverage:merge": "Merges the code coverage reports for unit and functional tests.",
		"ci:coverage:unit": "Generates the code coverage report for unit tests.",
		"ci:dynamic": "Runs all PHPUnit tests (unit and functional).",
		"ci:json:lint": "Lints the JSON files.",
		"ci:php": "Runs all static checks for the PHP files.",
		"ci:php:copypaste": "Checks for copy'n'pasted PHP code.",
		"ci:php:cs-fixer": "Checks the code style with the PHP Coding Standards Fixer (PHP-CS-Fixer).",
		"ci:php:lint": "Lints the PHP files for syntax errors.",
		"ci:php:sniff": "Checks the code style with PHP_CodeSniffer (PHPCS).",
		"ci:php:stan": "Checks the PHP types using PHPStan.",
		"ci:static": "Runs all static code checks (syntax, style, types).",
		"ci:tests": "Runs all PHPUnit tests (unit and functional).",
		"ci:tests:functional": "Runs the functional tests.",
		"ci:tests:unit": "Runs the unit tests.",
		"ci:ts:lint": "Lints the TypoScript files.",
		"ci:yaml:lint": "Lints the YAML files.",
		"docs:generate": "Renders the extension ReST documentation.",
		"fix:php": "Runs all fixers for the PHP code.",
		"fix:php:cs": "Fixes the code style with PHP-CS-Fixer.",
		"fix:php:sniff": "Fixes the code style with PHP_CodeSniffer.",
		"phpstan:baseline": "Updates the PHPStan baseline file to match the code.",
		"prepare-release": "Removes development-only files in preparation of a TER release."
	}
}
